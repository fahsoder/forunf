{"ast":null,"code":"var _jsxFileName = \"A:\\\\www\\\\forunf\\\\app\\\\src\\\\pages\\\\User.page.jsx\";\nimport React, { useState } from 'react';\nimport Api from '../services/api';\nimport './User.page.css';\n\nconst User = () => {\n  const [name, setName] = useState('');\n  const [userId, setUserId] = useState('');\n  const [image, setImage] = useState('');\n  const [hasUserInfo, setHasUserInfo] = useState(false);\n\n  const onSubmit = () => {\n    Api.get(`search-user?user=${name}`).then(response => {\n      if (response.data.success) {\n        setUserId(response.data.userId);\n        setImage(response.data.profileImage);\n      }\n\n      setHasUserInfo(response.data.success);\n    });\n  };\n\n  const confirmUser = () => {\n    // Buscar informações de seguidores na API\n    // localhost:5000/get-user-info?userId=${userId}\n    return;\n  };\n\n  const doNotConfirmUser = () => {\n    // Buscar o próximo usuário\n    // chamar o endpoint do onSubmit novamente com um parâmetro a mais\n    // search-user?user=${name}&page=1\n    return;\n  };\n\n  const renderUserInfo = () => {\n    if (hasUserInfo) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"userPageInfoContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        className: \"userPageUserName\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, \"Nome de usu\\xE1rio: \", name), /*#__PURE__*/React.createElement(\"img\", {\n        src: image,\n        className: \"userPageUserImage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"userPageConfirmText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, \"Voc\\xEA \\xE9 este usu\\xE1rio?\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"userPageConfirmUser\",\n        onClick: confirmUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }\n      }, \"Confirmar\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"userPageDoNotConfirmUser\",\n        onClick: doNotConfirmUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }\n      }, \"N\\xE3o\"));\n    }\n\n    return;\n  };\n\n  const renderSearch = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"userPageSearchContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"userPageSearchLabel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }, \"Nome de usu\\xE1rio\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"userSearch\",\n      className: \"userPageSearchInput\",\n      placeholder: \"@fahsoder\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"userPageSearchSubmit\",\n      onClick: onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, \"Buscar\"), renderUserInfo());\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"userPageContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, renderSearch());\n};\n\nexport default User;","map":{"version":3,"sources":["A:/www/forunf/app/src/pages/User.page.jsx"],"names":["React","useState","Api","User","name","setName","userId","setUserId","image","setImage","hasUserInfo","setHasUserInfo","onSubmit","get","then","response","data","success","profileImage","confirmUser","doNotConfirmUser","renderUserInfo","renderSearch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport Api from '../services/api';\r\n\r\nimport './User.page.css';\r\n\r\nconst User = () => {\r\n  const [name, setName] = useState('');\r\n  const [userId, setUserId] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [hasUserInfo, setHasUserInfo] = useState(false);\r\n\r\n  const onSubmit = () => {\r\n    Api.get(`search-user?user=${name}`).then((response) => {\r\n      if (response.data.success) {\r\n        setUserId(response.data.userId)\r\n        setImage(response.data.profileImage)\r\n      }\r\n      setHasUserInfo(response.data.success)\r\n    });\r\n  };\r\n\r\n  const confirmUser = () => {\r\n    // Buscar informações de seguidores na API\r\n    // localhost:5000/get-user-info?userId=${userId}\r\n    return\r\n  }\r\n\r\n  const doNotConfirmUser = () => {\r\n    // Buscar o próximo usuário\r\n    // chamar o endpoint do onSubmit novamente com um parâmetro a mais\r\n    // search-user?user=${name}&page=1\r\n    return\r\n  }\r\n\r\n  const renderUserInfo = () => {\r\n    if (hasUserInfo) {\r\n      return (\r\n        <div className=\"userPageInfoContainer\">\r\n          <p className=\"userPageUserName\">Nome de usuário: {name}</p>\r\n          <img src={image} className=\"userPageUserImage\" />\r\n          <p className=\"userPageConfirmText\">Você é este usuário?</p>\r\n          <button className=\"userPageConfirmUser\" onClick={confirmUser}>Confirmar</button>\r\n          <button className=\"userPageDoNotConfirmUser\" onClick={doNotConfirmUser}>Não</button>\r\n        </div>\r\n      )\r\n    }\r\n    return\r\n  }\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <div className=\"userPageSearchContainer\">\r\n        <label className=\"userPageSearchLabel\">Nome de usuário</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"userSearch\"\r\n          className=\"userPageSearchInput\"\r\n          placeholder=\"@fahsoder\"\r\n          value={name}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <button className=\"userPageSearchSubmit\" onClick={onSubmit}>\r\n          Buscar\r\n        </button>\r\n        {renderUserInfo()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return <div className=\"userPageContainer\">{renderSearch()}</div>;\r\n};\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}